---
import { parse } from 'node-html-parser';
export interface Props extends icons{
    className: string;
}

export interface icons{
    icon: 
        "IconSteam"|
        "IconCVList"|
        "IconPaypal"|
        "IconEmail"|
        "IconLinkedin"|
        "IconSun"|
        "IconGithub"|
        "IconTwitter"|
        "IconInstagram"|
        "IconUser"|
        "IconHome"|
        "IconBlog"|
        "IconMenu"|
        "IconAstro"
}
export interface Props {
    icon: string;
    }

const { icon, ...attributes } = Astro.props as Props;
const { default: svg } = await import(`./${icon}.svg?raw`);

function addAttributesToInnerHTMLString(innerHTML: string, attributes: Omit<Props, "icon">) {
    const attributesString = Object.entries(attributes)
        .map(([key, value]) => `${key}="${value}"`)
        .join(' ');

    return innerHTML.replace(/^<svg/, `<svg ${attributesString}`);
}

const innerHTML = addAttributesToInnerHTMLString(svg, attributes);

---

<Fragment {...attributes} set:html={innerHTML}/>