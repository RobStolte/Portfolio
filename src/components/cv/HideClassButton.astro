---
import {toSentenceCase,CapitalizeFirst } from '@/scripts/stringConverters.ts'
const { name, classname } = Astro.props;
const categoryText = CapitalizeFirst(toSentenceCase(name));
---
<hide-class-button>
    <button class="bg-green-600 hover:bg-slate-900 text-white font-bold py-2 px-4 rounded-xl m-4"
      data-classname={classname}
      type="button">{categoryText}</button>
</hide-class-button>
<script>
    class HideClassButton extends HTMLElement {
        constructor() {
            super();

            const button = this.querySelector('button');
            if (button) {
                const classname = button.dataset.classname;

                button.addEventListener('click', () => {
                    const toggleCategory = (classname: string | undefined) => {
                        // Select all elements with the category class
                        const elements = document.querySelectorAll('.' + classname);
                        // For each element, toggle the 'hidden' class
                        elements.forEach(element => {
                            element.classList.toggle('hidden');
                        });
                    }
                    toggleCategory(classname);

                    // Add an extra class to the button
                    button.classList.toggle('toggled');
                    hideLastVisibleLine();
                });
            }
        };
    }
    customElements.define('hide-class-button', HideClassButton);
    function hideLastVisibleLine() {
    // Select all .education__time elements
    const elements = Array.from(document.querySelectorAll('.education__time'));

    // Filter out hidden elements
    const visibleElements = elements.filter((element: HTMLElement) => element.offsetParent !== null);

    // Iterate over the visible elements
    for (let i = 0; i < visibleElements.length; i++) {
        // Get the current and next visible elements
        const currentElement = visibleElements[i];
        const nextElement = visibleElements[i + 1];

        // If the next visible element is not found, hide the line of the current element
        if (!nextElement) {
            const line = currentElement.querySelector('.education__line');
            if (line) {
                (line as HTMLElement).style.display = 'none';
            }
        }
    }
}

</script>
<style>
    .toggled {
        background-color: #100418;
    }
</style>