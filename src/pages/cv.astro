---
import BaseLayout from "@/layouts/BaseLayout.astro";
import TimeLineElement from "@/components/cv/TimeLine.astro";
import HideClassButton from "@/components/cv/HideClassButton.astro";
import { toSentenceCase } from "@/scripts/stringConverters.ts";
import skills from "@/skills.json";
const processSkills = (skills: any[]) => {
    // Sort the skills array based on the rules provided
        skills.sort((a, b) => {
        // If end_date is 'null', put it at the top
        if (a.end_date === null) return -1;
        if (b.end_date === null) return 1;

        // If no end_date, put it at the bottom
        if (!a.end_date) return 1;
        if (!b.end_date) return -1;

        // Otherwise, sort by end_date
        return Number(b.end_date) - Number(a.end_date);
    });
    return {
        timelineTrue: skills.filter(skill => skill.timeline_element === true),
        timelineFalse: skills.filter(skill => skill.timeline_element === false),
    };
}

const sortedSkills = processSkills(skills.skills);
const timelineArray = sortedSkills.timelineTrue;
const uniqueCategories = [...new Set(timelineArray.map(item => item.category))];

// creating the skills lists
const skillsArray = sortedSkills.timelineFalse;
const categories = skillsArray.reduce((acc, skill: {title: string, category: string, timeline_element: boolean}) => {
  if (!acc[skill.category]) {acc[skill.category] = [];}
  acc[skill.category].push(skill.title);
  return acc;
}, {});


---
<BaseLayout title="Curriculum vitae" sideBarActiveItemID="cv">

<!-- Add more buttons for more categories -->
  <h1 class="text-3xl w-full font-bold">Curriculum vitae</h1>
{uniqueCategories.map((button) => (
    <HideClassButton
        name={button}
        classname={`timeline__element__category--${button}`}
    />
))}
  <br class="mb-10 text-justify"/>
  <section class="time-line-container">
      {timelineArray.map((timelineElement) => (
        <TimeLineElement
          title     = {timelineElement.title}
          company   = {timelineElement.company}
          startDate = {timelineElement.start_date}
          endDate   = {timelineElement.end_date}
          location  = {timelineElement.location}
          text      = {timelineElement.text}
          link      = {timelineElement.link}
          category  = {timelineElement.category}
          classname = {`timeline__element__category--${timelineElement.category}`}
        />
      ))}
  </section>
  {
    Object.entries(categories).map(([category, titles]: [string, string[]]) => (
      <section class="mb-10" id={category}>
        <h2 class="text-3xl w-full font-bold mb-5">{toSentenceCase(category,true)}</h2>
        <ul class="list-disc md:columns-5 columns-2 mx-6">
          {
            titles.map((title: string) => (<li>{title}</li>))
          }
        </ul>
      </section>
    ))
  }
</BaseLayout>
<style is:global>
.time-line-container > div:last-child .education__time > .education__line,
.time-line-container > div:only-child .education__time > .education__line {
  display: none;
}
</style>
