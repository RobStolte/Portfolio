---
import TimeLineElement      from "@/components/cv/TimeLine.astro";
import {toSentenceCase}     from "@/scripts/stringConverters.ts";
import {supabase}           from "@/scripts/supabase.ts";
import Layout               from "@/layouts/Layout.astro";
import type {SupabaseSkill} from "@/scripts/interfaces.d.ts";

// Define the type for the API response
interface SkillTableData {
    title: string;
    category: { name: string }[];
}

interface TimelineData {
    data: SupabaseSkill[];
    error: any;
}

// getting the skills table data from the database
async function getSkillTables(): Promise<Record<string, string[]> | null> {
    const {data, error} = await supabase
        .from('skills')
        .select('title, category(name)')
        .eq('timeline_element', false) as { data: SkillTableData[], error: any };

    if (error || !data) {
        console.error('Error: ', error || new Error("No data from the database, it must be in pause mode."));
        return null;
    }
    return data.reduce((acc, item) => {
        if (item.category) {
            const category = item.category[0]?.name;  // Adjusted for array
            if (category && !acc[category]) {
                acc[category] = [];
            }
            if (category && item.title) {
                acc[category].push(item.title);
            }
        }
        return acc;
    }, {} as Record<string, string[]>);
}

const skillTables = await getSkillTables();

// getting the timeline data from the database
const skillTimelineResponse = await supabase
    .from('skills')
    .select(`title,description,start_date,end_date,url!left(url),company!left(name),category!left(name),location!left(name)`)
    .eq('timeline_element', true)
    .order('end_date', {ascending: false}) as TimelineData;
console.log(skillTimelineResponse);
const isLoading = (skillTables === null) || (skillTimelineResponse.error !== null);
---
<Layout title="Curriculum vitae">
    {isLoading ?
     <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh'}}>
         Database has gone in pause mode because of not enough visitors. I'm not paying for the db (yet).
     </div>
               :
     <section class="time-line-container">
         {skillTimelineResponse.data && skillTimelineResponse.data.map((data) => (
             <TimeLineElement
                 title={data.title || null}
                 company={data.company?.name || null}
                 startDate={data.start_date || null}
                 endDate={data.end_date || null}
                 location={data.location?.name || null}
                 text={data.description || null}
                 link={data.url?.url || null}
                 category={data.category?.name || null}
                 classname={`timeline__element__category--${data.category?.name || null}`}
             ></TimeLineElement>
         ))}
     </section>}
    {
        isLoading ?
        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh'}}>

        </div> :
        Object.entries(skillTables as { [key: string]: string[] }).map(([category, titles]) => (
            <section class="cv-section">
                <h2 class="section-title">{toSentenceCase(category, true)}</h2>
                <ul>
                    {
                        titles.map((title: string) => (
                            <li class="list-item">{title}</li>))
                    }
                </ul>
            </section>
        ))
    }
    }
</Layout>
<style>
    .time-line-container {

    }

    .block {
        display : block;
    }

    .full-width {
        width : 100%;
    }

    .timeline-buttons-container {
        justify-content : center;
        margin          : 1rem;
        width           : 100%;
    }

    .cv-section {
        margin-bottom : 2.5rem;
    }

    .section-title {
        width         : 100%;
        margin-bottom : 1.25rem;
        font-size     : 1.875rem;
        font-weight   : bold;
    }

    .list {
        padding-left    : 1.5rem;
        list-style-type : disc;
    }

    .grid {
        display  : grid;
        grid-gap : 1rem;
    }


</style>

<style is:global>
    .time-line-container > div:last-child .education__time > .education__line,
    .time-line-container > div:only-child .education__time > .education__line {
        display : none;
    }
</style>